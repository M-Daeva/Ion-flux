/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.25.2.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  update_config: {
    admin?: string | null;
    price_age?: Uint128 | null;
    swap_fee_rate?: Decimal | null;
    unbonding_period?: Uint128 | null;
    window?: Uint128 | null;
  };
} | {
  update_token: {
    price_feed_id_str: string;
    symbol: string;
    token_addr: string;
  };
} | {
  unbond: {
    amount: Uint128;
    token_addr: string;
  };
} | {
  withdraw: {
    amount: Uint128;
    token_addr: string;
  };
} | {
  claim: {};
} | {
  swap_and_claim: {
    token_out_addr: string;
  };
};
export type Uint128 = string;
export type Binary = string;
export type Decimal = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  query_config: {};
} | {
  query_tokens_weight: {
    address_list: string[];
  };
} | {
  query_liquidity: {
    address_list: string[];
  };
} | {
  query_providers: {
    address_list: string[];
  };
} | {
  query_tokens: {
    address_list: string[];
  };
} | {
  query_balances: {
    address_list: string[];
  };
} | {
  query_prices: {
    address_list: string[];
  };
} | {
  query_prices_mocked: {
    address_list: string[];
  };
};
export type MigrateMsg = string;
export type Addr = string;
export type ArrayOfBalance = Balance[];
export interface Balance {
  amount: Uint128;
  token_addr: Addr;
}
export interface Config {
  admin: Addr;
  chain_id_mocked: string;
  price_age: Uint128;
  swap_fee_rate: Decimal;
  unbonding_period: Uint128;
  window: Uint128;
}
export type ArrayOfTupleOfAddrAndUint128 = [Addr, Uint128][];
export type ArrayOfTupleOfAddrAndDecimal = [Addr, Decimal][];
export type Timestamp = Uint64;
export type Uint64 = string;
export type ArrayOfTupleOfAddrAndArrayOfAsset = [Addr, Asset[]][];
export interface Asset {
  bonded: Uint128;
  counter: Timestamp;
  requested: Uint128;
  rewards: Uint128;
  token_addr: Addr;
  unbonded: Uint128;
}
export type ArrayOfTupleOfAddrAndToken = [Addr, Token][];
export interface Token {
  bonded: [Sample[], Uint128];
  price_feed_id_str: string;
  requested: [Sample[], Uint128];
  swapped_in: [Sample[], Uint128];
  swapped_out: [Sample[], Uint128];
  symbol: string;
}
export interface Sample {
  timestamp: Timestamp;
  value: Uint128;
}